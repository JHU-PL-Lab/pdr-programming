Name: pdr-programming
Version: 0.1
OCamlVersion: >= 4.04
Synopsis: A metaprogramming library for specifying abstract push-down systems.
Authors: JHU PL Lab <pl.cs@jhu.edu>
License: Apache

Maintainers: JHU PL Lab <pl.cs@jhu.edu>
Description: A library which provides metaprogramming tools for the specification of abstract push-down systems.  In particular, this library generates client code for the pds-reachability library.
Homepage: https://github.com/JHU-PL-Lab/pdr-programming

OASISFormat: 0.4
BuildTools: ocamlbuild
Plugins: META (0.4)
AlphaFeatures: ocamlbuild_more_args
XOCamlbuildExtraArgs: -use-ocamlfind
BuildDepends: threads

# The following ensures that ppx_import is executed before ppx_deriving.std.
XOCamlbuildPluginTags: package(ppx_import), package(ppx_deriving.std)

# The following allows individual developers to customize their environments
# (e.g. reposition the _build directory via a symlink) on build.
PreBuildCommand: ./.execute_if_exists ./.local_prebuild
PreCleanCommand: ./.execute_if_exists ./.local_preclean

SourceRepository head
  Type: git
  Location: https://github.com/JHU-PL-Lab/pdr-programming.git
  Browser: https://github.com/JHU-PL-Lab/pdr-programming
  Branch: master

Library "pdr-programming"
  Path: src
  Modules:
    Pdr_programming

Library "utils"
  FindlibParent: pdr-programming
  Path: src/utils
  Modules:
    Variable_utils
  BuildDepends:
    batteries,
    jhupllib,
    ppx_deriving.std

Library "a-normalization"
  FindlibParent: pdr-programming
  Path: src/a_normalization
  Modules:
    A_normalizer
  BuildDepends:
    batteries,
    jhupllib,
    ppx_deriving.std,
    pdr-programming.utils

Library "continuation-extensions"
  FindlibParent: pdr-programming
  Path: src/continuation_extensions
  Modules:
    Continuation_fragment_constructors,
    Continuation_fragment_types,
    Continuation_transformer,
    Continuation_transformer_monad
  BuildDepends:
    batteries,
    jhupllib,
    ppx_deriving.std,
    pdr-programming.a-normalization,
    pdr-programming.utils

Executable "test"
  Path: test/
  MainIs: test.ml
  CompiledObject: native
  #ByteOpt+: -ppx src/ppx-pds-programming/ppx_pds_programming.native
  #NativeOpt+: -ppx src/ppx-pds-programming/ppx_pds_programming.native
  BuildDepends:
    batteries,
    oUnit,
    ppx_deriving.std,
    ppx_tools,
    ppx_tools.metaquot,
    pdr-programming.a-normalization

Executable "sandbox"
  Path: test/
  MainIs: sandbox.ml
  CompiledObject: native
  #ByteOpt+: -ppx src/ppx-pds-programming/ppx_pds_programming.native
  #NativeOpt+: -ppx src/ppx-pds-programming/ppx_pds_programming.native
  BuildDepends:
    batteries,
    jhupllib,
    oUnit,
    ppx_deriving.std,
    ppx_tools,
    ppx_tools.metaquot,
    pdr-programming.a-normalization,
    pdr-programming.continuation-extensions

Test test
  Command: $test
